[{"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\index.js":"1","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\reportWebVitals.js":"2","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\App.js":"3","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\index.js":"4","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\routers\\BasicRoute.jsx":"5","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\reducer.js":"6","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\utils\\route-optimization.js":"7","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\routers\\NestedRoute.jsx":"8","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\Header\\index.jsx":"9","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\login\\index.jsx":"10","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\register\\index.jsx":"11","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\constants.js":"12","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-new\\index.jsx":"13","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\actionCreators.js":"14","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\login\\service.js":"15","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\register\\service.js":"16","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\Loading\\index.jsx":"17","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\home\\index.jsx":"18","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-detail\\index.jsx":"19","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-new\\service.js":"20","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\utils\\utils.js":"21","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\NotificationBox\\index.jsx":"22","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\ArticleConditionModal\\index.jsx":"23","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\utils\\request.js":"24","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-detail\\service.js":"25","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\ArticleBox\\index.js":"26","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\home\\service.js":"27","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\ArticleConditionModal\\service.js":"28","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\CommentBox\\index.js":"29","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\CommentBox\\service.js":"30","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\leaving-message\\index.jsx":"31","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\leaving-message\\service.js":"32","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\personal\\index.jsx":"33","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\personal\\service.js":"34"},{"size":553,"mtime":1613449557975,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1613449557984,"results":"37","hashOfConfig":"36"},{"size":278,"mtime":1613449557714,"results":"38","hashOfConfig":"36"},{"size":499,"mtime":1613449557987,"results":"39","hashOfConfig":"36"},{"size":1612,"mtime":1613449557984,"results":"40","hashOfConfig":"36"},{"size":1523,"mtime":1613449557987,"results":"41","hashOfConfig":"36"},{"size":799,"mtime":1618315575349,"results":"42","hashOfConfig":"36"},{"size":643,"mtime":1618495066346,"results":"43","hashOfConfig":"36"},{"size":4591,"mtime":1618495068462,"results":"44","hashOfConfig":"36"},{"size":3056,"mtime":1618460505036,"results":"45","hashOfConfig":"36"},{"size":3509,"mtime":1618490400235,"results":"46","hashOfConfig":"36"},{"size":74,"mtime":1613449557986,"results":"47","hashOfConfig":"36"},{"size":14789,"mtime":1618238334704,"results":"48","hashOfConfig":"36"},{"size":204,"mtime":1613449557986,"results":"49","hashOfConfig":"36"},{"size":164,"mtime":1613449557982,"results":"50","hashOfConfig":"36"},{"size":284,"mtime":1618476734309,"results":"51","hashOfConfig":"36"},{"size":212,"mtime":1613449557973,"results":"52","hashOfConfig":"36"},{"size":6504,"mtime":1618544382140,"results":"53","hashOfConfig":"36"},{"size":14106,"mtime":1618386625004,"results":"54","hashOfConfig":"36"},{"size":514,"mtime":1613449557979,"results":"55","hashOfConfig":"36"},{"size":2895,"mtime":1616895989175,"results":"56","hashOfConfig":"36"},{"size":384,"mtime":1613449557974,"results":"57","hashOfConfig":"36"},{"size":10137,"mtime":1618386721983,"results":"58","hashOfConfig":"36"},{"size":2760,"mtime":1615189199609,"results":"59","hashOfConfig":"36"},{"size":840,"mtime":1618386378623,"results":"60","hashOfConfig":"36"},{"size":1749,"mtime":1613449557969,"results":"61","hashOfConfig":"36"},{"size":380,"mtime":1618231663562,"results":"62","hashOfConfig":"36"},{"size":394,"mtime":1615189188771,"results":"63","hashOfConfig":"36"},{"size":2502,"mtime":1618386678458,"results":"64","hashOfConfig":"36"},{"size":153,"mtime":1618365061581,"results":"65","hashOfConfig":"36"},{"size":2927,"mtime":1618459152636,"results":"66","hashOfConfig":"36"},{"size":252,"mtime":1618453448732,"results":"67","hashOfConfig":"36"},{"size":3412,"mtime":1618538684894,"results":"68","hashOfConfig":"36"},{"size":246,"mtime":1618497230054,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1oqiy3i",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\index.js",[],["145","146"],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\reportWebVitals.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\App.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\index.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\routers\\BasicRoute.jsx",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\reducer.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\utils\\route-optimization.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\routers\\NestedRoute.jsx",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\Header\\index.jsx",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\login\\index.jsx",["147"],"import React, { useState } from 'react';\r\nimport { message, Spin } from 'antd';\r\nimport notification from '../../components/NotificationBox/index';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../store/actionCreators';\r\nimport './index.css';\r\nimport { loginUser } from './service';\r\nconst Index = props => {\r\n    const [email, setEmail] = useState(\"878@qq.com\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [pwd, setPwd] = useState(\"123456\");\r\n    const login = async () => {\r\n        if (!(email && pwd)) {\r\n            notification({ message: '信息不全', description: '请输入用户姓名、邮箱与密码' });\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        let res = await loginUser({ user_email: email, user_password: pwd });\r\n        if (res.code === 200) {\r\n            //登录成功\r\n            //登录完之后，把user放入localstorage，token放入localstorage\r\n            let token=res.data.token;\r\n            let user={...res.data};\r\n            delete user.token;\r\n            localStorage.setItem(\"user\",JSON.stringify(user));\r\n            localStorage.setItem(\"token\",token);\r\n            props.updateUser(user);\r\n            message.success(\"登录成功，即将跳转到文章界面\");\r\n            setTimeout(()=>{\r\n                props.history.push(\"/\")\r\n            },2000)\r\n        } else {\r\n            //错误\r\n            message.error(res.msg);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Spin spinning={loading} style={{ color: 'rgb(238, 113, 91)' }}>\r\n            <div className=\"all-box\">\r\n                <div className=\"login-box\">\r\n                    <div className=\"login-form\">\r\n                        <div className=\"login-title\">Rosella</div>\r\n                        <input\r\n                            placeholder=\"Email\"\r\n                            value={email || ''}\r\n                            onChange={v => setEmail(v.target.value)}\r\n                        />\r\n                        <input\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            value={pwd || ''}\r\n                            onChange={v => setPwd(v.target.value)}\r\n                        />\r\n                        <div className=\"common-button\" onClick={() => login()}>Sign in</div>\r\n                        <div>\r\n                            Dont have account?{' '}\r\n                            <a onClick={() => props.history.push('/register')}>Sign Up </a>now\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Spin>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    //返回一个方法，传入props,要更新store就调用这个方法\r\n    updateUser(data) {\r\n        const action = actionCreators.setUser(data);\r\n        dispatch(action);\r\n    },\r\n});\r\nexport default withRouter(connect(null,mapDispatchToProps)(Index));\r\n","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\register\\index.jsx",["148","149","150","151","152","153","154","155"],"import React, { useEffect, useState } from \"react\";\r\nimport { message, Spin, Button } from \"antd\";\r\nimport notification from \"../../components/NotificationBox/index\";\r\nimport { withRouter } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport { registerUser, mailSend } from \"./service\";\r\nconst Index = (props) => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [pwd, setPwd] = useState();\r\n  const [vNum, setVNum] = useState();\r\n  const [time, setTime] = useState(0);\r\n  const register = async () => {\r\n    if (!(email && name && pwd)) {\r\n      notification({\r\n        message: \"信息不全\",\r\n        description: \"请输入用户姓名、邮箱与密码\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    let res = await registerUser({\r\n      user_email: email,\r\n      user_name: name,\r\n      user_password: pwd,\r\n      vNum:vNum\r\n    });\r\n    if (res.code === 200) {\r\n      //创建成功，跳转登录界面\r\n      message.success(\"创建成功，即将跳转到登录界面\");\r\n      setTimeout(() => history.push(\"/login\"), 2000);\r\n    } else {\r\n      //错误\r\n      message.error(res.msg);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const sendMail = async () => {\r\n    var re = /^(([^()[\\]\\\\.,;:\\s@\\\"]+(\\.[^()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    if (!re.test(email)) {\r\n        notification({ message: \"错误\", description:\"邮箱格式有误\"});\r\n        return;\r\n    }\r\n    await mailSend({mail:email});\r\n    setTime(60);\r\n  };\r\n  useEffect(() => {\r\n    if (time != 0) {\r\n      setTimeout(() => setTime((c) => c - 1), 1000);\r\n    }\r\n  }, [time]);\r\n  return (\r\n    <Spin spinning={loading} style={{ color: \"rgb(238, 113, 91)\" }}>\r\n      <div className=\"all-box\">\r\n        <div className=\"register-box\">\r\n          <div className=\"register-form\">\r\n            <div className=\"register-title\">Register</div>\r\n            <Button\r\n              danger\r\n              type=\"text\"\r\n              style={{ position: \"absolute\", top: \"11rem\", right: \"0rem\" }}\r\n              disabled={time != 0}\r\n              onClick={() => sendMail()}\r\n            >\r\n              {time == 0 ? \"发送验证码\" : time + \"后重新调用\"}\r\n            </Button>\r\n            <input\r\n              placeholder=\"Email\"\r\n              value={email || \"\"}\r\n              onChange={(v) => setEmail(v.target.value)}\r\n            />\r\n            <input\r\n              placeholder=\"Validate Code\"\r\n              value={vNum || \"\"}\r\n              onChange={(v) => setVNum(v.target.value)}\r\n            />\r\n            <input\r\n              placeholder=\"Name\"\r\n              value={name || \"\"}\r\n              onChange={(v) => setName(v.target.value)}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={pwd || \"\"}\r\n              onChange={(v) => setPwd(v.target.value)}\r\n            />\r\n            <div className=\"common-button\" onClick={() => register()}>\r\n              Sign up\r\n            </div>\r\n            <div>\r\n              Have account?{\" \"}\r\n              <a onClick={() => props.history.push(\"/login\")}>Sign in </a>\r\n              now\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Spin>\r\n  );\r\n};\r\nexport default withRouter(Index);\r\n","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\constants.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-new\\index.jsx",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\store\\actionCreators.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\login\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\register\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\Loading\\index.jsx",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\home\\index.jsx",["156","157"],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-detail\\index.jsx",["158"],"import React, { useEffect } from \"react\";\r\nimport { message, Modal, Tag, Input, Button } from \"antd\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  findByUserId,\r\n  findArticleById,\r\n  findCommentById,\r\n  addComment,\r\n  isAgree,\r\n  addAgree,\r\n  report\r\n} from \"./service\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport * as style from \"./index.module.css\";\r\nimport notification from \"../../components/NotificationBox/index\";\r\nimport CommentBox from \"../../components/CommentBox/index\";\r\nimport agreeIcon from \"../../assets/agree.png\";\r\nimport reportIcon from \"../../assets/report.png\";\r\nconst { TextArea } = Input;\r\nconst Detail = (props) => {\r\n  // let detail = props.location.params;\r\n  let id = props.location.pathname.split(\"/detail/\")[1];\r\n  let publisher = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [user, setUser] = useState({});\r\n  const [detail, setDetail] = useState({});\r\n  const [commentList, setCommentList] = useState([]);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [like,setLike]=useState(false);\r\n  //请求接口\r\n  const findDetail = async () => {\r\n    // if (!props.location.params) return;\r\n    if (!id) return;\r\n    let res = await Promise.all([\r\n      findArticleById({ article_id: id }),\r\n      findCommentById({ article_id: id }),\r\n      isAgree({article_id:id,user_id:publisher.user_id}),\r\n    ]);\r\n    // let res = await findArticleById({ article_id: id });\r\n    // await findCommentById({ article_id: id });\r\n    setDetail(res[0].data[0]);\r\n    setCommentList(res[1].data);\r\n    setLike(res[2].data);\r\n    res = await findByUserId({ user_id: res[0].data[0].user_id });\r\n    setUser(res.user[0]);\r\n  };\r\n  //评论\r\n  const onPublish = async () => {\r\n    let condition = {\r\n      article_id: detail.article_id,\r\n      user_id: publisher.user_id,\r\n      user_name: publisher.user_name,\r\n      user_avatar: publisher.user_avatar,\r\n      comment_content: comment,\r\n    };\r\n    let res = await addComment(condition);\r\n    if (res.code === 200) {\r\n      message.success(\"评论成功\");\r\n      // this.getArticleList();\r\n      //重新请求评论列表\r\n      let res2 = await findCommentById({ article_id: id });\r\n      setCommentList(res2.data);\r\n    } else {\r\n      notification({ message: \"错误\", description: res.msg });\r\n    }\r\n  };\r\n  //点赞\r\n  const onPushLike =async()=>{\r\n    if(!like){\r\n      let res = await addAgree({article_id:id,user_id:publisher.user_id});\r\n      if(res.code===200){\r\n        message.success(\"点赞成功\");\r\n        let newDetail={...detail};\r\n        newDetail.article_like_count+=1;\r\n        setDetail(newDetail);\r\n        setLike(true);\r\n      }\r\n    }\r\n  }\r\n  const onPushRepost = async()=>{\r\n    let res = await report({article_id:id,user_id:publisher.user_id,user_name:publisher.user_name})\r\n    if(res.code===200){\r\n      message.success(\"举报成功，待管理员审核\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    findDetail();\r\n  }, [id]);\r\n  if (id) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <h1 style={{ maxWidth: \"55%\" }}>{detail.article_title}</h1>\r\n        {/* 用户信息 */}\r\n        <div\r\n          style={{\r\n            width: \"40vw\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"5rem\",\r\n          }}\r\n        >\r\n          {/* 左边 */}\r\n          <div style={{ display: \"flex\" }}>\r\n            <img\r\n              src={user.user_avatar}\r\n              alt=\"头像\"\r\n              style={{ width: \"5rem\", height: \"5rem\", borderRadius: \"50%\" }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"flex-start\",\r\n                marginLeft: \"0.6rem\",\r\n              }}\r\n            >\r\n              <div>{user.user_name}</div>\r\n              <div style={{ fontSize: \"12px\", color: \"#969696\" }}>\r\n                {detail.article_date}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* 右边 */}\r\n          <div>\r\n            {detail.label && detail.label.length > 0 ? (\r\n              detail.label.map((item) => {\r\n                return (\r\n                  <Tag color=\"#108ee9\" key={item.label_id}>\r\n                    {item.label_name}\r\n                  </Tag>\r\n                );\r\n              })\r\n            ) : (\r\n              <Tag color=\"#108ee9\">无标签</Tag>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* 文章 */}\r\n        <div style={{ width: \"50%\" }}>\r\n          <ReactMarkdown\r\n            source={detail.article_content}\r\n            escapeHtml={false}\r\n            allowDangerousHtml={true}\r\n          />\r\n        </div>\r\n        {/* 点赞 or 举报 */}\r\n        <div\r\n          style={{\r\n            width: \"50%\",\r\n            margin: \"3rem\",\r\n            textAlign: \"center\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div>\r\n            <img\r\n              className={style[\"icon\"]}\r\n              title=\"点赞\"\r\n              src={agreeIcon}\r\n              alt=\"点赞\"\r\n              onClick={()=>onPushLike()}\r\n            />\r\n            <p>{like?\"已点赞，\":\"\"}{detail.article_like_count}点赞</p>\r\n          </div>\r\n          <div>\r\n            <img\r\n              className={style[\"icon\"]}\r\n              title=\"举报\"\r\n              src={reportIcon}\r\n              alt=\"举报\"\r\n              onClick={()=>onPushRepost()}\r\n            />\r\n            <p>举报</p>\r\n          </div>\r\n        </div>\r\n        {/* 评论框 */}\r\n        <div style={{ marginTop: \"5rem\", width: \"50%\", marginBottom: \"5rem\" }}>\r\n          {/* <div style={{margin:\"1rem\",marginLeft:\"0\",fontSize:\"1.7rem\",fontWeight:\"800\"}}>评论<span style={{fontSize:\"1.4rem\",color:\"#595959\",fontWeight:\"500\"}}>(已有xxx条评论)</span></div> */}\r\n          <div\r\n            style={{\r\n              margin: \"1rem\",\r\n              marginLeft: \"0\",\r\n              fontSize: \"1.7rem\",\r\n              fontWeight: \"800\",\r\n            }}\r\n          >\r\n            评论\r\n          </div>\r\n          <TextArea\r\n            className={style[\"ant-textarea\"]}\r\n            showCount\r\n            onChange={(e) => setComment(e.target.value)}\r\n            maxLength={100}\r\n            placeholder=\"发表评论\"\r\n            autoSize={{ minRows: 2, maxRows: 2 }}\r\n            row={2}\r\n          />\r\n          <Button style={{ marginTop: \"1rem\" }} onClick={() => onPublish()}>\r\n            发表\r\n          </Button>\r\n        </div>\r\n        {/* 评论 */}\r\n        <div style={{ marginTop: \"5rem\", width: \"50%\", marginBottom: \"5rem\" }}>\r\n          {commentList.map((v) => {\r\n            return (\r\n              <CommentBox\r\n                key={v.comment_id}\r\n                callback={async () => {\r\n                  let res2 = await findCommentById({\r\n                    article_id: detail.article_id,\r\n                  });\r\n                  setCommentList(res2.data);\r\n                }}\r\n                comment={v}\r\n                condition={{\r\n                  article_id: detail.article_id,\r\n                  user_id: publisher.user_id,\r\n                  user_name: publisher.user_name,\r\n                  user_avatar: publisher.user_avatar,\r\n                }}\r\n              ></CommentBox>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    setTimeout(() => props.history.push(\"/\"), 3000);\r\n    return (\r\n      <Modal title=\"错误提示\" visible={true} closable={false} footer={null}>\r\n        无选中的文章，即将返回首页\r\n      </Modal>\r\n    );\r\n  }\r\n};\r\nexport default withRouter(Detail);\r\n\r\n// import Vditor from 'vditor';\r\n// import 'vditor/src/assets/scss/index.scss';\r\n\r\n// import Editor from 'for-editor-herb';\r\n// // require `highlight.js` package\r\n// const Hljs = require('highlight.js');\r\n// class Detail extends React.Component {\r\n//     constructor() {\r\n//         super();\r\n//         this.state = {\r\n//             value: '',\r\n//         };\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         // register languages in componentDidMount lifecycle\r\n//         Hljs.registerLanguage('css', require('highlight.js/lib/languages/css'));\r\n//         Hljs.registerLanguage('json', require('highlight.js/lib/languages/json'));\r\n//         Hljs.registerLanguage('less', require('highlight.js/lib/languages/less'));\r\n//         Hljs.registerLanguage('scss', require('highlight.js/lib/languages/scss'));\r\n//         Hljs.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\r\n//         Hljs.registerLanguage('typescript', require('highlight.js/lib/languages/typescript'));\r\n//         Hljs.registerLanguage('go', require('highlight.js/lib/languages/go'));\r\n//     }\r\n\r\n//     handleChange(value) {\r\n//         this.setState({\r\n//             value,\r\n//         });\r\n//     }\r\n\r\n//     render() {\r\n//         const { value } = this.state;\r\n//         // Support default language('en', 'zh-CN', 'zh-TW', 'jp') and localization\r\n//         const toolbar = {\r\n//             h1: true,\r\n//             h2: true,\r\n//             h3: true,\r\n//             h4: true,\r\n//             h5: true,\r\n//             h6: true,\r\n//             img: true,\r\n//             list: true,\r\n//             para: {\r\n//                 paragraph: true, // control the whole part if you don't want to display\r\n//                 italic: true,\r\n//                 bold: true,\r\n//                 bolditalic: true,\r\n//                 delline: true,\r\n//                 underline: true,\r\n//                 keytext: true,\r\n//                 superscript: true,\r\n//                 subscript: true,\r\n//                 marktag: true,\r\n//             },\r\n//             table: true,\r\n//             quote: true,\r\n//             link: true,\r\n//             inlinecode: true,\r\n//             code: true,\r\n//             collapse: true,\r\n//             katex: true,\r\n//             preview: true,\r\n//             expand: true,\r\n//             undo: true,\r\n//             redo: true,\r\n//             save: true,\r\n//             subfield: true,\r\n//             toc: true, // generate TOC\r\n//         };\r\n\r\n//         // Transfer function `Hljs.highlightAuto` to the Editor\r\n//         return (\r\n//             <Editor\r\n//                 value={value}\r\n//                 toolbar={toolbar}\r\n//                 onChange={() => this.handleChange()}\r\n//                 highlight={Hljs.highlightAuto}\r\n//             />\r\n//         );\r\n//     }\r\n// }\r\n// // import { Modal } from 'antd';\r\n// // import { useLocation } from 'react-router-dom';\r\n// // const Detail = props => {\r\n// //     const location = useLocation();\r\n// //     let detail=location.params;\r\n// //     if (detail) {\r\n\r\n// //     } else {\r\n// //         return (\r\n// //             <Modal\r\n// //                 title=\"错误提示\"\r\n// //                 visible={true}\r\n// //                 closable={false}\r\n// //                 footer={null}\r\n// //             >\r\n// //                 无选中的文章，即将返回首页\r\n// //             </Modal>\r\n// //         );\r\n// //     }\r\n// // };\r\n// // class Detail extends React.Component {\r\n// //     render() {\r\n// //         return (\r\n// //             <div>\r\n// //                 <textarea id=\"md_editor\"></textarea>\r\n// //             </div>\r\n// //         );\r\n// //     }\r\n\r\n// //mditor\r\n\r\n// //     componentDidMount() {\r\n// //         // const s = document.createElement('script');\r\n// //         // s.type = 'text/javascript';\r\n// //         // s.src = 'https://unpkg.com/mditor@1.0.5/dist/js/mditor.min.js';\r\n// //         // document.body.appendChild(s);\r\n// //         // console.log('到这里');\r\n// //         var mditor = new Mditor()\r\n// //         mditor.fromTextarea(document.getElementById('md_editor'));\r\n\r\n// //         //获取或设置编辑器的值\r\n// //         mditor.on('ready', function () {\r\n// //             console.log(mditor.value);\r\n// //             mditor.value = '** hello **';\r\n// //         });\r\n// //         //   var ele_textarea = document.getElementById('md_editor');\r\n// //         //   var mditor =  Mditor.fromTextarea(ele_textarea);\r\n// //     }\r\n// // }\r\n\r\n// //vditor\r\n\r\n// export default class Demo extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             editValue: '',\r\n//         };\r\n//     }\r\n//     componentDidMount = () => {\r\n//         //组件挂载完成之后调用 注意一定要在组件挂载完成之后调用 否则会找不到注入的DOM\r\n//         this.createVidtor({ value: this.state.editValue });\r\n//     };\r\n//     //创建编辑器 下面会详解\r\n//     createVidtor = params => {\r\n//         let { value } = params;\r\n//         value = value ? value : ' ';\r\n//         let that = this;\r\n//         const vditor = new Vditor('vditor', {\r\n//             height: 800,\r\n//             // mode: 'sv', //及时渲染模式\r\n//             placeholder: 'React Vditor',\r\n//             toolbar:['emoji' , 'headings' , 'bold' , 'italic' , 'strike' , '|' , 'line' , 'quote' , 'list' , 'ordered-list' , 'check' ,'outdent' ,'indent' , 'code' , 'inline-code' , 'insert-after' , 'insert-before' ,'undo' , 'redo' , 'upload' , 'link' , 'table' , 'record' , 'edit-mode' , 'both' , 'preview' , 'fullscreen' , 'outline' , 'code-theme' , 'content-theme' , 'export', 'devtools' , 'info' , 'help' , 'br']\r\n//         });\r\n//         this.vditor = vditor;\r\n//         return vditor;\r\n//     };\r\n//     //首先需要在render里面注入DOM，可自定义注入DOM的ID，初始化编辑器的时候使用自定义的ID即可\r\n//     render() {\r\n//         return (\r\n//             <div className=\"editorWrap\">\r\n//                 <div id=\"vditor\" />\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-new\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\utils\\utils.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\NotificationBox\\index.jsx",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\ArticleConditionModal\\index.jsx",["159"],"import React, { useEffect, useState } from \"react\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { Divider, Input, Select, Upload, Form, message } from \"antd\";\r\nimport { labelList, updateCondition, uploadPhoto } from \"./service\";\r\n\r\nimport * as style from \"./index.module.css\";\r\nimport skeletion from \"../../assets/skeleton.png\";\r\nimport img_skeleton from \"../../assets/img_skeleton.png\";\r\nimport imageUrl from \"../../assets/upload.png\";\r\n/**\r\n * ts 组件化写法\r\n */\r\n// interface Label{\r\n//     label_id?:Number;\r\n//     label_name:String;\r\n//     label_description:String;\r\n// }\r\n// interface Condition{\r\n//     article_desc?:String;\r\n//     article_img_url?:String;\r\n//     article_label?:Label[];\r\n// }\r\n// interface Props{\r\n//     condition:Condition;\r\n//     visible:Boolean;\r\n//     onFinish:(value:Condition)=>void;\r\n// }\r\nconst { TextArea } = Input;\r\nconst { Option } = Select;\r\nconst ArticleConditionModal = (props) => {\r\n  // let { condition, visible = false, onFinish, onCancel, ...opts } = props;\r\n  let { condition, visible = false, onCancel } = props;\r\n  let oldLabel = condition.label\r\n    ? condition.label.map((item) => item.label_id)\r\n    : [];\r\n  const [form] = Form.useForm();\r\n  const [labels, setLabels] = useState([]);\r\n  const [fileList, setFileList] = useState();\r\n  //监听获取数据\r\n  useEffect(() => {\r\n    if (!condition) return;\r\n    if (condition.label) {\r\n      let labels = condition.label.map((v) => v.label_id);\r\n      form.setFieldsValue({\r\n        label: labels,\r\n        article_desc: condition.article_desc,\r\n      });\r\n      setFileList([{ name: \"封面\", url: condition.article_img_url }]);\r\n    }\r\n    if (condition.article_id) {\r\n      labelList({ article_id: condition.article_id }).then((res) => {\r\n        if (res.code === 200) {\r\n          setLabels(res.data);\r\n        }\r\n      });\r\n    }\r\n  }, [condition]);\r\n  //更新\r\n  const handleCondition = async () => {\r\n    let { label, article_desc } = form.getFieldsValue();\r\n    let article_img_url;\r\n    if (fileList[0].url) {\r\n      //有文件了，跳过；\r\n      article_img_url = fileList[0].url;\r\n    } else {\r\n      let res1 = await uploadPhoto({ file: fileList[0] });\r\n      if (res1.code === 200) {\r\n        article_img_url = res1.data;\r\n      } else {\r\n        message.error(\"图片上传不成功\");\r\n      }\r\n    }\r\n    let res = await updateCondition({\r\n      label,\r\n      article_desc,\r\n      article_img_url,\r\n      article_id: condition.article_id,\r\n    });\r\n    if (res.code === 200) {\r\n      message.success(\"更新成功\");\r\n      onCancel();\r\n    } else {\r\n      message.error(\"更新失败\");\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={style[\"article-condition\"]}\r\n      style={visible ? {} : { display: \"none\" }}\r\n    >\r\n      {/* 中间的东西 */}\r\n      <div className={style[\"condition-box\"]}>\r\n        <div className={style[\"condition-box-left\"]}>\r\n          {/* 左 */}\r\n          <Form onFinish={handleCondition} form={form}>\r\n            <div\r\n              style={{\r\n                fontSize: \"24px\",\r\n                margin: \"0\",\r\n                lineHeight: \"33px\",\r\n                color: \"#262626\",\r\n              }}\r\n            >\r\n              设置封面图，优化文章的显示效果\r\n            </div>\r\n            <div\r\n              style={{ fontSize: \"14px\", lineHeight: \"20px\", color: \"#b3b3b3\" }}\r\n            >\r\n              未设置则自动按默认样式显示\r\n            </div>\r\n            <div\r\n              style={{\r\n                borderLeft: \"1px dashed #b3b3b3\",\r\n                paddingLeft: \"3rem\",\r\n                paddingTop: \"3rem\",\r\n                transform: \"translate(2rem, 1rem)\",\r\n              }}\r\n            >\r\n              {/* 步骤设置 */}\r\n\r\n              <div className={style[\"per-box\"]}>\r\n                <b>选择标签</b>\r\n                <Form.Item style={{ marginBottom: \"0px\" }} name={\"label\"}>\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    allowClear\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Please select\"\r\n                    value={oldLabel}\r\n                    // value={condition.label.map((item)=>{return item.label_id})}\r\n                  >\r\n                    {labels.map((item) => {\r\n                      return (\r\n                        <Option key={item.label_id} value={item.label_id}>\r\n                          {item.label_name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n                <em className={style[\"time-lime\"]}>1</em>\r\n              </div>\r\n\r\n              <Form.Item\r\n                style={{ marginBottom: \"0px\" }}\r\n                name={\"article_img_url\"}\r\n              >\r\n                <div className={style[\"per-box\"]}>\r\n                  <b>上传封面图</b>\r\n                  <span\r\n                    style={{\r\n                      fontSize: \"14px\",\r\n                      lineHeight: \"20px\",\r\n                      color: \"#b3b3b3\",\r\n                    }}\r\n                  >\r\n                    尺寸大于 360×360，格式 png/jpg\r\n                  </span>\r\n                  <em className={style[\"time-lime\"]}>2</em>\r\n                  <div>\r\n                    <Upload\r\n                      name=\"file\"\r\n                      action=\"#\"\r\n                      fileList={fileList}\r\n                      beforeUpload={() => {\r\n                        return false;\r\n                      }}\r\n                      onRemove={() => {\r\n                        setFileList(undefined);\r\n                      }}\r\n                      onChange={(file) => {\r\n                        setFileList([file.file]);\r\n                      }}\r\n                    >\r\n                      <div className={style[\"upload-box\"]}>\r\n                        <img\r\n                          src={imageUrl}\r\n                          alt=\"avatar\"\r\n                          style={{ width: \"4rem\" }}\r\n                        />\r\n                        点击上传\r\n                      </div>\r\n                    </Upload>\r\n                  </div>\r\n                </div>\r\n              </Form.Item>\r\n\r\n              <div className={style[\"per-box\"]}>\r\n                <b>输入摘要</b>\r\n                <Form.Item\r\n                  style={{ marginBottom: \"0px\" }}\r\n                  name={\"article_desc\"}\r\n                >\r\n                  <TextArea\r\n                    className={style[\"ant-textarea\"]}\r\n                    showCount\r\n                    maxLength={30}\r\n                    autoSize={{ minRows: 2, maxRows: 2 }}\r\n                    row={2}\r\n                  />\r\n                </Form.Item>\r\n                <em className={style[\"time-lime\"]}>3</em>\r\n              </div>\r\n            </div>\r\n            <div style={{ display: \"flex\" }}>\r\n              <div className={style[\"preserve\"]} onClick={() => form.submit()}>\r\n                保存\r\n              </div>\r\n              <div className={style[\"cancel\"]} onClick={()=>{onCancel()}}>\r\n                取消\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </div>\r\n        <Divider dashed type=\"vertical\" style={{ height: \"50rem\" }} />\r\n        <div className={style[\"condition-box-right\"]}>\r\n          <div className={style[\"phone-top\"]}>{/* 手机顶部 */}</div>\r\n          <div className={style[\"phone-border\"]}>\r\n            {/* 手机边框 */}\r\n            <div className={style[\"phone-screen\"]}>\r\n              {/* 手机屏幕 */}\r\n              <div>\r\n                <img\r\n                  src={skeletion}\r\n                  alt=\"骨架屏\"\r\n                  style={{ width: \"92%\", marginLeft: \"4%\", marginTop: \"1rem\" }}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  width: \"92%\",\r\n                  marginLeft: \"4%\",\r\n                  marginTop: \"1rem\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                  borderTop: \"1px solid rgb(243, 243, 243)\",\r\n                  paddingTop: \"1rem\",\r\n                  borderBottom: \"1px solid rgb(243, 243, 243)\",\r\n                  paddingBottom: \"1rem\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <div style={{ fontWeight: \"600\", fontSize: \"1.4rem\" }}>\r\n                    2021-02-07\r\n                  </div>\r\n                  <div className={style[\"phone-desc\"]}>\r\n                    {condition.article_desc}\r\n                  </div>\r\n                  <div className={style[\"label\"]}>\r\n                    <span>VUE</span>\r\n                    <span>React</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <img src={fileList&&fileList[0].url?fileList[0].url:img_skeleton} alt=\"骨架屏\" style={{ width: \"26%\" }} />\r\n              </div>\r\n              <div>\r\n                <img\r\n                  src={skeletion}\r\n                  alt=\"骨架屏\"\r\n                  style={{ width: \"92%\", marginLeft: \"4%\", marginTop: \"1rem\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontWeight: \"500\",\r\n              textAlign: \"center\",\r\n              fontSize: \"1.7rem\",\r\n              color: \"#262626\",\r\n              marginTop: \"3rem\",\r\n            }}\r\n          >\r\n            效果预览\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontSize: \"1.4rem\",\r\n              lineHeight: \"2rem\",\r\n              color: \"#b3b3b3\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            仅供参考，具体效果会根据不同手机型号而变化\r\n          </div>\r\n          {/* 右 */}\r\n        </div>\r\n      </div>\r\n      {/* 关闭按钮 */}\r\n      <div className={style[\"close-button\"]} onClick={()=>{onCancel()}}>\r\n        <CloseOutlined\r\n          style={{ fontSize: \"2.5rem\", color: \"rgb(179, 179, 179)\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ArticleConditionModal;\r\n","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\utils\\request.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\article-detail\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\ArticleBox\\index.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\home\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\ArticleConditionModal\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\CommentBox\\index.js",["160"],"import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport {\r\n    addComment,\r\n  } from \"./service\";\r\nimport { Comment,Modal,message, Avatar,Input,Button } from \"antd\";\r\nimport notification from \"../../components/NotificationBox/index\";\r\nconst { TextArea } = Input;\r\nconst CommmentBox = (props) => {\r\n  const [isModalVisible,setIsModalVisible]=useState(false);\r\n  const [loading,setLoading]=useState(false);\r\n  const [comment,setComment]=useState(\"\");\r\n  const handleOk=async ()=>{\r\n      setLoading(true);\r\n      let condition=props.condition;\r\n      condition.comment_content=comment;\r\n      condition.parent_comment=props.comment.comment_content;\r\n      condition.parent_comment_id=props.comment.comment_id;\r\n      condition.parent_comment_user_name=props.comment.user_name;\r\n      console.log(condition);\r\n      let res = await addComment(condition);\r\n      if (res.code === 200) {\r\n        message.success(\"评论成功\");\r\n        // this.getArticleList();\r\n        setIsModalVisible(false);\r\n        setLoading(false);\r\n        //回调函数刷新列表\r\n        props.callback();\r\n      } else {\r\n        notification({ message: \"错误\", description: res.msg });\r\n      }\r\n\r\n  }\r\n  const handleCancel=()=>{\r\n    setIsModalVisible(false);\r\n  }\r\n  return (\r\n    <>\r\n    <Comment\r\n      actions={[\r\n        <span key=\"comment-nested-reply-to\" onClick={() =>setIsModalVisible(true)}>\r\n          回复\r\n        </span>\r\n      ]}\r\n      author={<a>{props.comment.user_name}</a>}\r\n      avatar={<Avatar src={props.comment.user_avatar} alt=\"Han Solo\" />}\r\n      content={\r\n        <>\r\n          {props.comment.parent_comment_id?<p style={{padding:\" 0.3rem 1rem\",margin: \"1rem 0\",background: \"rgb(244, 244, 244)\",color: \"rgb(121 118 118)\", borderRadius: \"5px\"}}>{props.comment.parent_comment_user_name}: {props.comment.parent_comment}</p>:\"\"}\r\n          <p>{props.comment.comment_content}</p>\r\n        </>\r\n      }\r\n    >\r\n      {props.children}\r\n    </Comment>\r\n    <Modal title=\"评论\" visible={isModalVisible} footer={[<Button key=\"submit\" type=\"primary\" loading={loading} onClick={()=>handleOk()}>评论</Button>]} onCancel={handleCancel} >\r\n        <TextArea\r\n            showCount\r\n            onChange={(e) => setComment(e.target.value)}\r\n            maxLength={100}\r\n            placeholder={`回复${props.comment.user_name}:`}\r\n            autoSize={{ minRows: 2, maxRows: 2 }}\r\n            row={2}\r\n          />\r\n    </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default CommmentBox;\r\n","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\components\\CommentBox\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\leaving-message\\index.jsx",["161","162"],"import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { addLMessage, findLMessage } from \"./service\";\r\nimport { Form, Input, message, Button, Comment, Avatar } from \"antd\";\r\nimport * as style from \"./index.module.css\";\r\nimport notification from \"../../components/NotificationBox/index\";\r\nconst { TextArea } = Input;\r\nconst LeavingMessage = (props) => {\r\n  let publisher = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [list, setList] = useState([]);\r\n  useEffect(() => {\r\n    findList();\r\n  }, []);\r\n  let findList = async () => {\r\n    let res = await findLMessage();\r\n    console.log(res);\r\n    setList(res.data);\r\n  };\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 8,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const onFinish = async (values) => {\r\n    let condition = {\r\n      user_id: publisher.user_id,\r\n      user_name: publisher.user_name,\r\n      user_avatar: publisher.user_avatar,\r\n      msg: values.msg,\r\n    };\r\n    let res = await addLMessage(condition);\r\n    if (res.code == 200) {\r\n      message.success(\"评论成功\");\r\n      findList();\r\n    } else {\r\n      notification({ message: \"错误\", description: res.msg });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n        style={{\r\n          marginTop: \"3rem\",\r\n          width: \"70%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          marginLeft: \"15%\",\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"留言\"\r\n          name=\"msg\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"请输入留言\",\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea\r\n            className={style[\"ant-textarea\"]}\r\n            showCount\r\n            maxLength={100}\r\n            autoSize={{ minRows: 2, maxRows: 2 }}\r\n            row={2}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            留言\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n          精选留言\r\n        {list.map((v) => {\r\n          return (\r\n            <Comment\r\n              style={{ width: \"45rem\",borderBottom: \"1px solid #cccaca\"}}\r\n              author={<a>{v.user_name}</a>}\r\n              avatar={<Avatar src={v.user_avatar} alt=\"Han Solo\" />}\r\n              content={\r\n                <>\r\n                  <p>{v.msg}</p>\r\n                </>\r\n              }\r\n            >\r\n              {props.children}\r\n            </Comment>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default withRouter(LeavingMessage);\r\n","E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\leaving-message\\service.js",[],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\personal\\index.jsx",["163","164","165","166","167","168"],"E:\\rucksack\\毕业设计\\gp\\graduation_project\\blog_react\\src\\pages\\personal\\service.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":59,"column":29,"nodeType":"175","endLine":59,"endColumn":80},{"ruleId":"176","severity":1,"message":"177","line":42,"column":34,"nodeType":"178","messageId":"179","endLine":42,"endColumn":35,"suggestions":"180"},{"ruleId":"176","severity":1,"message":"177","line":42,"column":57,"nodeType":"178","messageId":"179","endLine":42,"endColumn":58,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"177","line":42,"column":66,"nodeType":"178","messageId":"179","endLine":42,"endColumn":67,"suggestions":"182"},{"ruleId":"176","severity":1,"message":"177","line":42,"column":70,"nodeType":"178","messageId":"179","endLine":42,"endColumn":71,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":51,"column":14,"nodeType":"186","messageId":"187","endLine":51,"endColumn":16},{"ruleId":"184","severity":1,"message":"185","line":65,"column":30,"nodeType":"186","messageId":"187","endLine":65,"endColumn":32},{"ruleId":"184","severity":1,"message":"188","line":68,"column":21,"nodeType":"186","messageId":"187","endLine":68,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":96,"column":15,"nodeType":"175","endLine":96,"endColumn":63},{"ruleId":"189","severity":1,"message":"190","line":71,"column":6,"nodeType":"191","endLine":71,"endColumn":8,"suggestions":"192"},{"ruleId":"184","severity":1,"message":"188","line":95,"column":29,"nodeType":"186","messageId":"187","endLine":95,"endColumn":31},{"ruleId":"189","severity":1,"message":"193","line":88,"column":6,"nodeType":"191","endLine":88,"endColumn":10,"suggestions":"194"},{"ruleId":"189","severity":1,"message":"195","line":57,"column":6,"nodeType":"191","endLine":57,"endColumn":17,"suggestions":"196"},{"ruleId":"173","severity":1,"message":"174","line":45,"column":15,"nodeType":"175","endLine":45,"endColumn":18},{"ruleId":"184","severity":1,"message":"188","line":38,"column":18,"nodeType":"186","messageId":"187","endLine":38,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":95,"column":23,"nodeType":"175","endLine":95,"endColumn":26},{"ruleId":"197","severity":1,"message":"198","line":15,"column":13,"nodeType":"178","messageId":"199","endLine":15,"endColumn":36},{"ruleId":"197","severity":1,"message":"198","line":17,"column":12,"nodeType":"178","messageId":"199","endLine":17,"endColumn":44},{"ruleId":"197","severity":1,"message":"198","line":18,"column":13,"nodeType":"178","messageId":"199","endLine":18,"endColumn":46},{"ruleId":"197","severity":1,"message":"198","line":21,"column":12,"nodeType":"178","messageId":"199","endLine":21,"endColumn":56},{"ruleId":"189","severity":1,"message":"200","line":37,"column":6,"nodeType":"191","endLine":37,"endColumn":8,"suggestions":"201"},{"ruleId":"184","severity":1,"message":"188","line":44,"column":18,"nodeType":"186","messageId":"187","endLine":44,"endColumn":20},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["204","205"],["206","207"],["208","209"],["210","211"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isEnd', 'isLoading', and 'params'. Either include them or remove the dependency array.","ArrayExpression",["212"],"React Hook useEffect has a missing dependency: 'findDetail'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["214"],"no-template-curly-in-string","Unexpected template string expression.","unexpectedTemplateExpression","React Hook useEffect has missing dependencies: 'findUser' and 'publisher'. Either include them or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"messageId":"216","fix":"217","desc":"218"},{"messageId":"219","fix":"220","desc":"221"},{"messageId":"216","fix":"222","desc":"218"},{"messageId":"219","fix":"223","desc":"221"},{"messageId":"216","fix":"224","desc":"218"},{"messageId":"219","fix":"225","desc":"221"},{"messageId":"216","fix":"226","desc":"218"},{"messageId":"219","fix":"227","desc":"221"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"removeEscape",{"range":"236","text":"237"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"238","text":"239"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"240","text":"237"},{"range":"241","text":"239"},{"range":"242","text":"237"},{"range":"243","text":"239"},{"range":"244","text":"237"},{"range":"245","text":"239"},"Update the dependencies array to be: [isEnd, isLoading, params]",{"range":"246","text":"247"},"Update the dependencies array to be: [findDetail, id]",{"range":"248","text":"249"},"Update the dependencies array to be: [condition, form]",{"range":"250","text":"251"},"Update the dependencies array to be: [findUser, publisher]",{"range":"252","text":"253"},[1305,1306],"",[1305,1305],"\\",[1328,1329],[1328,1328],[1337,1338],[1337,1337],[1341,1342],[1341,1341],[2360,2362],"[isEnd, isLoading, params]",[2925,2929],"[findDetail, id]",[1841,1852],"[condition, form]",[1025,1027],"[findUser, publisher]"]